package com.example.web_aplication.controllers;


import com.example.web_aplication.dto.CommentDTO;
import com.example.web_aplication.model.Comment;
import com.example.web_aplication.services.CommentService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import jakarta.validation.Valid;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/posts") // üëà –¢–µ–ø–µ—Ä—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å /posts
public class CommentController {
    private static final Logger log = LoggerFactory.getLogger(CommentController.class);

    @Autowired
    private CommentService commentService;

    @Operation(summary = "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è", description = "–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
    @ApiResponse(responseCode = "200", description = "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
    @PostMapping("/{postId}/comments") // üëà –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    public ResponseEntity<Comment> addComment(@PathVariable Long postId, @Valid @RequestBody CommentDTO commentDTO) {
        log.info("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –ø–æ—Å—Ç–∞ ID {}", postId);

        commentDTO.setPostId(postId);
        Comment createdComment = commentService.addComment(commentDTO);
        return ResponseEntity.ok(createdComment);
    }

    @Operation(summary = "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", description = "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    @ApiResponse(responseCode = "200", description = "–°–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω")
    @GetMapping("/comments")
    public ResponseEntity<List<Comment>> getAllComments() {
        log.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤");
        List<Comment> comments = commentService.getAllComments();
        return ResponseEntity.ok(comments);
    }

    @Operation(summary = "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É", description = "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ postId")
    @ApiResponse(responseCode = "200", description = "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã")
    @GetMapping("/{postId}/comments") // üëà –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
    public ResponseEntity<List<Comment>> getCommentsByPost(@PathVariable Long postId) {
        log.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ —Å ID {}", postId);
        List<Comment> comments = commentService.getCommentsByPost(postId);
        return ResponseEntity.ok(comments);
    }
}
